{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"scftolus - Luscus extension # Scftolus is a Luscus extension granting support for using scf as input for generating Luscus scenes. Building C++ code # Working directory # In OS shell, navigate to scftolus repository folder you have cloned from https://github.com/Argmaster/scftolus . git clone https://github.com/Argmaster/scftolus.git Installing dependencies # Warning Required : Python 3.x interpreter, at least version 3.9 All project dependencies are included as git submodules. Warning Watch out to use appropriate for your platform python interpreter alias. On Unix-like platforms python 3.x is commonly aliased as python3 , on Windows you might have installed python loader which can be invoked with py -3.9 . To install dependencies use python3 scripts/install_libs.py Compilation # Warning Required : CMAKE version 3.19 or newer. Create directory to store build files: mkdir build Generate build system configuration files: cmake .. Info During development of this code, Ninja build system is used, but feel free to use your favorite, however in this example we will use ninja. Build binary files: ninja Documentation # To build yourself documentation, you need Python 3 interpreter, at least version 3.9. Warning Watch out to use appropriate for your platform python interpreter alias. On Unix-like platforms python 3.x is commonly aliased as python3 , on Windows you might have installed python loader which can be invoked with py -3.9 . Info Preferred way to install dependencies is to create virtual environment to store them. It can be done with: python3 -m venv .env Then virtual environment have to be enabled via: On Unix-like: source .env/bin/activate On Windows: Powershell: .env\\Scripts\\activate.bat cmd.exe: .env\\Scripts\\Activate.ps1 See Python's venv documentation. After, run following command to install doc builder and dependencies: python -m pip install -r requirements-docs.txt To live view docs use mkdocs serve To build docs web page use mkdocs build Static site can be viewed by opening ./site/index.html in web browser","title":"Home"},{"location":"#scftolus-luscus-extension","text":"Scftolus is a Luscus extension granting support for using scf as input for generating Luscus scenes.","title":"scftolus - Luscus extension"},{"location":"#building-c-code","text":"","title":"Building C++ code"},{"location":"#working-directory","text":"In OS shell, navigate to scftolus repository folder you have cloned from https://github.com/Argmaster/scftolus . git clone https://github.com/Argmaster/scftolus.git","title":"Working directory"},{"location":"#installing-dependencies","text":"Warning Required : Python 3.x interpreter, at least version 3.9 All project dependencies are included as git submodules. Warning Watch out to use appropriate for your platform python interpreter alias. On Unix-like platforms python 3.x is commonly aliased as python3 , on Windows you might have installed python loader which can be invoked with py -3.9 . To install dependencies use python3 scripts/install_libs.py","title":"Installing dependencies"},{"location":"#compilation","text":"Warning Required : CMAKE version 3.19 or newer. Create directory to store build files: mkdir build Generate build system configuration files: cmake .. Info During development of this code, Ninja build system is used, but feel free to use your favorite, however in this example we will use ninja. Build binary files: ninja","title":"Compilation"},{"location":"#documentation","text":"To build yourself documentation, you need Python 3 interpreter, at least version 3.9. Warning Watch out to use appropriate for your platform python interpreter alias. On Unix-like platforms python 3.x is commonly aliased as python3 , on Windows you might have installed python loader which can be invoked with py -3.9 . Info Preferred way to install dependencies is to create virtual environment to store them. It can be done with: python3 -m venv .env Then virtual environment have to be enabled via: On Unix-like: source .env/bin/activate On Windows: Powershell: .env\\Scripts\\activate.bat cmd.exe: .env\\Scripts\\Activate.ps1 See Python's venv documentation. After, run following command to install doc builder and dependencies: python -m pip install -r requirements-docs.txt To live view docs use mkdocs serve To build docs web page use mkdocs build Static site can be viewed by opening ./site/index.html in web browser","title":"Documentation"},{"location":"dependencies/","text":"scftolus dependencies # To ensure reliability, scftolus avoids redesigning a wheel, and uses open source libraries for handling everything that doesn't have to be written ground up. This approach guarantees that utilities used are maintained and well tested, despite limited time, scftolus developers have to work on this project. Command line interface - CLI11 # CLI11 is a command line parser for C++11 and beyond that provides a rich feature set with a simple and intuitive interface. Currently used version: v2.2.0 Visit this repository at GitHub CLI11 documentation XML parsing - pugixml # pugixml is a C++ XML processing library, which consists of a DOM-like interface with rich traversal/modification capabilities, an extremely fast XML parser which constructs the DOM tree from an XML file/buffer, and an XPath 1.0 implementation for complex data-driven tree queries. Full Unicode support is also available, with Unicode interface variants and conversions between different Unicode encodings (which happen automatically during parsing/saving). pugixml is used by a lot of projects, both open-source and proprietary, for performance and easy-to-use interface. Currently used version: v1.12.1 Visit this repository at GitHub Quick-start guide Complete reference manual Logging - spdlog # Very fast, header-only/compiled, C++ logging library. Currently used version: v1.10.0 Visit this repository at GitHub spdlog wiki String formatting - fmt # {fmt} is an open-source formatting library providing a fast and safe alternative to C stdio and C++ iostreams. If you like this project, please consider donating to one of the funds that help victims of the war in Ukraine: https://www.stopputin.net/. Currently used version: 8.1.1 Visit this repository at GitHub Documentation Cheat Sheets Unit testing - GoogleTest # This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together. Visit this repository at GitHub Documentation GoogleTest Primer","title":"Dependencies"},{"location":"dependencies/#scftolus-dependencies","text":"To ensure reliability, scftolus avoids redesigning a wheel, and uses open source libraries for handling everything that doesn't have to be written ground up. This approach guarantees that utilities used are maintained and well tested, despite limited time, scftolus developers have to work on this project.","title":"scftolus dependencies"},{"location":"dependencies/#command-line-interface-cli11","text":"CLI11 is a command line parser for C++11 and beyond that provides a rich feature set with a simple and intuitive interface. Currently used version: v2.2.0 Visit this repository at GitHub CLI11 documentation","title":"Command line interface - CLI11"},{"location":"dependencies/#xml-parsing-pugixml","text":"pugixml is a C++ XML processing library, which consists of a DOM-like interface with rich traversal/modification capabilities, an extremely fast XML parser which constructs the DOM tree from an XML file/buffer, and an XPath 1.0 implementation for complex data-driven tree queries. Full Unicode support is also available, with Unicode interface variants and conversions between different Unicode encodings (which happen automatically during parsing/saving). pugixml is used by a lot of projects, both open-source and proprietary, for performance and easy-to-use interface. Currently used version: v1.12.1 Visit this repository at GitHub Quick-start guide Complete reference manual","title":"XML parsing - pugixml"},{"location":"dependencies/#logging-spdlog","text":"Very fast, header-only/compiled, C++ logging library. Currently used version: v1.10.0 Visit this repository at GitHub spdlog wiki","title":"Logging - spdlog"},{"location":"dependencies/#string-formatting-fmt","text":"{fmt} is an open-source formatting library providing a fast and safe alternative to C stdio and C++ iostreams. If you like this project, please consider donating to one of the funds that help victims of the war in Ukraine: https://www.stopputin.net/. Currently used version: 8.1.1 Visit this repository at GitHub Documentation Cheat Sheets","title":"String formatting - fmt"},{"location":"dependencies/#unit-testing-googletest","text":"This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together. Visit this repository at GitHub Documentation GoogleTest Primer","title":"Unit testing - GoogleTest"}]}